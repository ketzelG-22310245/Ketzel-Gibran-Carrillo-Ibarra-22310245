#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
import time

ARCHIVO = "arbol_peliculas.json"

# ------------------ CARGAR / CREAR ÁRBOL INICIAL ------------------
def cargar_arbol():
    if not os.path.exists(ARCHIVO) or os.stat(ARCHIVO).st_size == 0:
        arbol_inicial = {
            "pregunta": "¿Tu película es de acción?",
            "si": {
                "pregunta": "¿Tu película es de superhéroes?",
                "si": {
                    "pregunta": "¿Tu película es de DC?",
                    "si": {"pelicula": "Superman"},
                    "no": {
                        "pregunta": "¿Tu película es de Marvel?",
                        "si": {"pelicula": "Iron Man"},
                        "no": {"aprende": True}
                    }
                },
                "no": {
                    "pregunta": "¿Tu película es de automóviles?",
                    "si": {"pelicula": "Rápidos y Furiosos"},
                    "no": {"aprende": True}
                }
            },
            "no": {
                "pregunta": "¿Tu película es de comedia?",
                "si": {
                    "pregunta": "¿Tu película es de comedia romántica?",
                    "si": {"pelicula": "Anyone but You"},
                    "no": {
                        "pregunta": "¿Tu película es de Adam Sandler?",
                        "si": {"pelicula": "Son como niños"},
                        "no": {
                            "pregunta": "¿Tu película tiene un protagonista mudo?",
                            "si": {"pelicula": "Mr. Bean"},
                            "no": {"aprende": True}
                        }
                    }
                },
                "no": {
                    "pregunta": "¿Tu película es de romance?",
                    "si": {
                        "pregunta": "¿Tu película ocurre en un barco?",
                        "si": {"pelicula": "Titanic"},
                        "no": {
                            "pregunta": "¿Tu película es sobre un científico?",
                            "si": {"pelicula": "La teoría del todo"},
                            "no": {
                                "pregunta": "¿Tu película es un romance triste?",
                                "si": {"pelicula": "Bajo la misma estrella"},
                                "no": {"aprende": True}
                            }
                        }
                    },
                    "no": {
                        "pregunta": "¿Tu película es un musical?",
                        "si": {
                            "pregunta": "¿Tu película es sobre jazz?",
                            "si": {"pelicula": "La La Land"},
                            "no": {
                                "pregunta": "¿Tu película es sobre un circo?",
                                "si": {"pelicula": "The Greatest Showman"},
                                "no": {
                                    "pregunta": "¿Tu película es sobre un artista?",
                                    "si": {"pelicula": "Rocketman"},
                                    "no": {"aprende": True}
                                }
                            }
                        },
                        "no": {
                            "pregunta": "¿Tu película es de ciencia ficción?",
                            "si": {
                                "pregunta": "¿Tu película tiene sables láser?",
                                "si": {"pelicula": "Star Wars: A New Hope"},
                                "no": {
                                    "pregunta": "¿Tu película tiene gusanos gigantes?",
                                    "si": {"pelicula": "Dune"},
                                    "no": {
                                        "pregunta": "¿Tu película es cyberpunk?",
                                        "si": {"pelicula": "Akira"},
                                        "no": {"aprende": True}
                                    }
                                }
                            },
                            "no": {"aprende": True}
                        }
                    }
                }
            }
        }
        guardar_arbol(arbol_inicial)
        return arbol_inicial

    with open(ARCHIVO, "r", encoding="utf-8") as f:
        return json.load(f)


# ------------------ GUARDAR ------------------
def guardar_arbol(arbol):
    with open(ARCHIVO, "w", encoding="utf-8") as f:
        json.dump(arbol, f, ensure_ascii=False, indent=4)


# ------------------ UTILIDADES ------------------
def pedir_si_no(prompt):
    while True:
        r = input(prompt + " (si/no): ").strip().lower()
        if r in ("si", "s"):
            return "si"
        if r in ("no", "n"):
            return "no"
        print("❗ Responde solo 'si' o 'no'.")


# ------------------ APRENDIZAJE (CAMINO 2) ------------------
def aprender(nodo):
    pelicula_antigua = nodo.get("pelicula", None)

    if pelicula_antigua:
        print(f"\n🤔 Oh, no era '{pelicula_antigua}'.")
    else:
        print("\n🤔 Parece que no he identificado la película.")

    pelicula_correcta = input("🎬 ¿Cuál era tu película? ").strip()
    while not pelicula_correcta:
        pelicula_correcta = input("Escribe el nombre de la película (no vacío): ").strip()

    if pelicula_antigua:
        ejemplo = f"Para diferenciar '{pelicula_correcta}' de '{pelicula_antigua}'"
    else:
        ejemplo = f"Para diferenciar '{pelicula_correcta}' de lo que conocía"
    nueva_pregunta = input(f"❓ Escribe una pregunta de sí/no que {ejemplo}: ").strip()
    while not nueva_pregunta:
        nueva_pregunta = input("Escribe la pregunta (no vacío): ").strip()

    respuesta_correcta = pedir_si_no(f"Para '{pelicula_correcta}', ¿la respuesta a esa pregunta es")

    if respuesta_correcta == "si":
        nuevo = {
            "pregunta": nueva_pregunta,
            "si": {"pelicula": pelicula_correcta},
            "no": {"pelicula": pelicula_antigua} if pelicula_antigua else {"aprende": True}
        }
    else:
        nuevo = {
            "pregunta": nueva_pregunta,
            "si": {"pelicula": pelicula_antigua} if pelicula_antigua else {"aprende": True},
            "no": {"pelicula": pelicula_correcta}
        }

    nodo.clear()
    nodo.update(nuevo)

    guardar_arbol(arbol_global)
    print("\n✅ Gracias — he aprendido. Actualicé el árbol.\n")
    time.sleep(1)


# ------------------ RECORRIDO / JUEGO ------------------
def jugar(arbol):
    nodo = arbol
    camino = []
    while True:
        if nodo.get("aprende", False):
            aprender(nodo)
            return "aprendido"

        if "pelicula" in nodo:
            respuesta = pedir_si_no(f"\n🎬 ¿Tu película es '{nodo['pelicula']}'?")
            if respuesta == "si":
                print("🎉 ¡Adiviné!")
                return "acierto"
            else:
                aprender(nodo)
                return "aprendido"

        if "reiniciar" in nodo and nodo["reiniciar"]:
            print("\n🔁 Reiniciando el juego...\n")
            return "reiniciar"

        if "pregunta" in nodo:
            respuesta = pedir_si_no(nodo["pregunta"])
            camino.append((nodo["pregunta"], respuesta))
            nodo = nodo["si"] if respuesta == "si" else nodo["no"]
            continue

        print("⚠️ Nodo inválido encontrado en el árbol. Reiniciando juego.")
        return "error"


# ------------------ LOOP PRINCIPAL ------------------
def iniciar_akinator():
    print("🎥 Bienvenido al Akinator de Películas (versión árbol corregido) 🎬\n")
    global arbol_global
    arbol_global = cargar_arbol()

    while True:
        resultado = jugar(arbol_global)
        if resultado in ("acierto", "aprendido"):
            volver = pedir_si_no("\n🎮 ¿Quieres jugar otra vez?")
            if volver == "si":
                print("\n🔁 Reiniciando...\n")
                continue
            else:
                print("\n👋 ¡Gracias por jugar! Se guardó el árbol en", ARCHIVO)
                break
        elif resultado == "reiniciar":
            continue
        else:
            print("\n⚠️ Finalizó por una razón inesperada.")
            break


# ------------------ EJECUCIÓN ------------------
if __name__ == "__main__":
    iniciar_akinator()
