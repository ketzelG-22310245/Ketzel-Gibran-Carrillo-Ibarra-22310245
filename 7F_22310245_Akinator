
import json
import os

# Archivo donde se guardar√° el conocimiento del Akinator
DB_FILE = "akinator.json"

# -----------------------------
# Clase del nodo del √°rbol
# -----------------------------
class Nodo:
    def __init__(self, pregunta=None, si=None, no=None, pelicula=None):
        self.pregunta = pregunta
        self.si = si
        self.no = no
        self.pelicula = pelicula

# -----------------------------
# Funciones para guardar/cargar
# -----------------------------
def guardar_arbol(nodo):
    """Guarda el √°rbol completo en un archivo JSON"""
    def nodo_a_dict(n):
        if n is None:
            return None
        return {
            "pregunta": n.pregunta,
            "pelicula": n.pelicula,
            "si": nodo_a_dict(n.si),
            "no": nodo_a_dict(n.no)
        }

    with open(DB_FILE, "w", encoding="utf-8") as f:
        json.dump(nodo_a_dict(nodo), f, ensure_ascii=False, indent=4)


def cargar_arbol():
    """Carga el √°rbol desde el archivo JSON o crea uno inicial"""
    if not os.path.exists(DB_FILE):
        return crear_arbol_inicial()

    def dict_a_nodo(d):
        if d is None:
            return None
        return Nodo(
            pregunta=d["pregunta"],
            pelicula=d["pelicula"],
            si=dict_a_nodo(d["si"]),
            no=dict_a_nodo(d["no"])
        )

    with open(DB_FILE, "r", encoding="utf-8") as f:
        data = json.load(f)
    return dict_a_nodo(data)

# -----------------------------
# √Årbol inicial con 5 g√©neros
# -----------------------------
def crear_arbol_inicial():
    accion = Nodo("¬øLa pel√≠cula es de acci√≥n?",
        si=Nodo("¬øHay superh√©roes?",
            si=Nodo(pelicula="Avengers: Endgame"),
            no=Nodo(pelicula="R√°pidos y Furiosos 9")
        )
    )
    comedia = Nodo("¬øLa pel√≠cula es de comedia?",
        si=Nodo("¬øAparece Adam Sandler?",
            si=Nodo(pelicula="Son como ni√±os"),
            no=Nodo(pelicula="Ted")
        )
    )
    terror = Nodo("¬øLa pel√≠cula es de terror?",
        si=Nodo("¬øInvolucra una casa embrujada?",
            si=Nodo(pelicula="El Conjuro"),
            no=Nodo(pelicula="It (Eso)")
        )
    )
    romance = Nodo("¬øLa pel√≠cula es rom√°ntica?",
        si=Nodo("¬øTranscurre en un colegio?",
            si=Nodo(pelicula="A todos los chicos de los que me enamor√©"),
            no=Nodo(pelicula="Titanic")
        )
    )
    ciencia_ficcion = Nodo("¬øLa pel√≠cula es de ciencia ficci√≥n?",
        si=Nodo("¬øHay viajes espaciales?",
            si=Nodo(pelicula="Interestelar"),
            no=Nodo(pelicula="Matrix")
        )
    )

    # El √°rbol principal pregunta por g√©neros en orden
    raiz = Nodo("¬øTu pel√≠cula es de acci√≥n?",
        si=accion,
        no=Nodo("¬øTu pel√≠cula es de comedia?",
            si=comedia,
            no=Nodo("¬øTu pel√≠cula es de terror?",
                si=terror,
                no=Nodo("¬øTu pel√≠cula es rom√°ntica?",
                    si=romance,
                    no=Nodo("¬øTu pel√≠cula es de ciencia ficci√≥n?",
                        si=ciencia_ficcion
                    )
                )
            )
        )
    )
    return raiz

# -----------------------------
# L√≥gica principal del Akinator
# -----------------------------
def hacer_pregunta(nodo):
    """Realiza las preguntas recursivamente"""
    if nodo.pelicula:
        respuesta = input(f"¬øTu pel√≠cula es '{nodo.pelicula}'? (s√≠/no): ").strip().lower()
        if respuesta in ["s√≠", "si"]:
            print("üé¨ ¬°Adivin√© la pel√≠cula!")
            return nodo
        else:
            return aprender(nodo)
    else:
        respuesta = input(f"{nodo.pregunta} (s√≠/no): ").strip().lower()
        if respuesta in ["s√≠", "si"]:
            if nodo.si:
                nodo.si = hacer_pregunta(nodo.si)
            else:
                nodo.si = aprender(Nodo())
        else:
            if nodo.no:
                nodo.no = hacer_pregunta(nodo.no)
            else:
                nodo.no = aprender(Nodo())
    return nodo

# -----------------------------
# Aprendizaje autom√°tico
# -----------------------------
def aprender(nodo):
    pelicula_usuario = input("No la adivin√© üòÖ ¬øCu√°l era tu pel√≠cula?: ").strip()
    nueva_pregunta = input(f"Dime una pregunta que distinga '{pelicula_usuario}' de '{nodo.pelicula}': ").strip()
    respuesta_correcta = input(f"Para '{pelicula_usuario}', ¬øla respuesta ser√≠a 's√≠' o 'no'? ").strip().lower()

    if respuesta_correcta in ["s√≠", "si"]:
        nuevo_nodo = Nodo(pregunta=nueva_pregunta,
                          si=Nodo(pelicula=pelicula_usuario),
                          no=nodo)
    else:
        nuevo_nodo = Nodo(pregunta=nueva_pregunta,
                          si=nodo,
                          no=Nodo(pelicula=pelicula_usuario))

    print("Gracias, he aprendido algo nuevo ü§ñ")
    return nuevo_nodo

# -----------------------------
# Programa principal
# -----------------------------
def iniciar_akinator():
    print("üé• Bienvenido al Akinator de Pel√≠culas con aprendizaje autom√°tico üé¨\n")
    raiz = cargar_arbol()
    raiz = hacer_pregunta(raiz)
    guardar_arbol(raiz)
    print("\nDatos guardados exitosamente en 'akinator.json' ‚úÖ")

# Ejecutar
if __name__ == "__main__":
    iniciar_akinator()